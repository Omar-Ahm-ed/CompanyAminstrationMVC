@model IEnumerable<EmployeeViewModel>
@{
    ViewData["Title"] = "Index";

    string S01 = ViewData["Message"] as string; // Required Casting
     // Not Required Casting
}

<style>
    /* Global Styles */

    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
    }

    .container {
        max-width: 1310px;
        margin: 0 auto;
        padding: 20px;
    }

    /* Header Styles */

    h1 {
        text-align: center;
        margin-bottom: 20px;
    }

    /* Search Form Styles */

    .search-form {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }

    .search-form input[type="text"] {
        width: 80%;
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .search-form input[type="submit"] {
        background-color: #4CAF50;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .search-form input[type="submit"]:hover {
        background-color: #3e8e41;
    }

    /* Button Styles */

    .btn {
        background-color: #4CAF50;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn:hover {
        background-color: #3e8e41;
    }

    /* Table Styles */

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        border: 1px solid #ddd;
        padding: 10px;
        text-align: center;
    }

    th {
        background-color: #f0f0f0;
    }

    /* Alert Styles */

    .alert {
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        margin-bottom: 20px;
    }

    .alert-success {
        background-color: #dff0d8;
        color: #3c763d;
        border-color: #d6e9c6;
    }

    .alert-warning {
        background-color: #fcf8e3;
        color: #8a6d3b;
        border-color: #faebcc;
    }

    /* Image Styles */

    img {
        width: 75px;
        height: 75px;
        border-radius: 50%;
    }

    /* Add Employee Button Styles */

    .add-employee-btn {
        margin-bottom: 20px;
    }
</style>

<div class="container">
    <h1>All Employees</h1>

    <div class="search-form">
        <form asp-action="Index">
            <div class="row m-5">
                <div class="col-8">
                    <input type="text" name="searchInput" id="searchInput" placeholder="Search By Name..." class="form-control" />
                </div>
                <div class="col-4">
                    <input type="submit" value="Search" class="btn btn-success" />
                </div>
            </div>
        </form>
    </div>
     @if (User.IsInRole("HR"))
    {
     <div class="add-employee-btn">
        <a asp-action="Create" class="btn btn-primary">Add Employee</a>
    </div>
    }
   
    <br />
    <br />

    @if (!string.IsNullOrEmpty(TempData["Message"] as string))
    {
        <div class="alert alert-success">
            <p>@TempData["Message"]</p>
        </div>
    }

    @if (Model.Count() > 0)
    {
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(d => d.Image)</th>
                    <th>@Html.DisplayNameFor(d => d.Name)</th>
                    <th>@Html.DisplayNameFor(d => d.Age)</th>
                    <th>@Html.DisplayNameFor(d => d.WorkFor)</th>
                    <th>@Html.DisplayNameFor(d => d.Address)</th>
                    <th>@Html.DisplayNameFor(d => d.PhoneNumber)</th>
                    <th>@Html.DisplayNameFor(d => d.Salary)</th>
                    <th>@Html.DisplayNameFor(d => d.IsAcive)</th>
                    <th>@Html.DisplayNameFor(d => d.HiringDate)</th>
                     @if (User.IsInRole("HR"))
                     {
                        <th>Details</th>
                     }
                    @if (User.IsInRole("Moderator"))
                    {
                        <th>Update</th>
                    }
                    
                    @if (User.IsInRole("HR"))
                     {
                                <th>Delete</th>
                     }
                </tr>
           </thead>
            <tbody>
                @foreach (var employee in Model)
                {
                    <tr>
                        <td>
                            <img src="~/Files/Images/@employee.ImageName" width="75" class="rounded-circle" />

                        </td>
                        <td>@employee.Name</td>
                        <td>@employee.Age</td>
                        <td>@employee.WorkFor?.Name</td>
                        <td>@employee.Address</td>
                        <td>@employee.PhoneNumber</td>
                        <td>@Html.DisplayFor(M => employee.Salary)</td>
                        <td>@Html.DisplayFor(M => employee.IsAcive)</td>
                        <td>@employee.HiringDate</td>
                        
                       <partial name="_ButtonPartialView" model="@employee.Id.ToString()"/>
                    </tr>
                }
            </tbody>
        </table>

    }
    else
    {
        <div class="mt-4 alert alert-warning">
            <h4>There is No Employees :(</h4>
        </div>
    }
</div>